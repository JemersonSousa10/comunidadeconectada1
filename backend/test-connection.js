const path = require('path');

// Carrega o .env da raiz do projeto
require('dotenv').config({ path: path.join(__dirname, '..', '.env') });

console.log('üîç Vari√°veis de ambiente carregadas:');
console.log('DB_HOST:', process.env.DB_HOST);
console.log('DB_USER:', process.env.DB_USER);
console.log('DB_NAME:', process.env.DB_NAME);
console.log('DB_PASSWORD:', process.env.DB_PASSWORD ? '*** (definida)' : 'N√ÉO DEFINIDA');

const db = require('./config/database');

async function testConnection() {
  try {
    console.log('\nüîÑ Testando conex√£o...');
    const [rows] = await db.execute('SELECT 1 + 1 AS result');
    console.log('‚úÖ Conex√£o bem-sucedida! Resultado do teste:', rows[0].result);
    
    // Verificar se o banco existe
    const [databases] = await db.execute('SHOW DATABASES');
    const dbExists = databases.some(db => db.Database === process.env.DB_NAME);
    console.log('üìä Banco de dados existe?', dbExists ? '‚úÖ Sim' : '‚ùå N√£o');
    
    if (dbExists) {
      const [tables] = await db.execute('SHOW TABLES');
      console.log('üìã Tabelas encontradas:', tables.map(t => Object.values(t)[0]));
    }
    
  } catch (error) {
    console.error('‚ùå Erro na conex√£o:', error.message);
    
    // Dicas espec√≠ficas baseadas no erro
    if (error.code === 'ER_ACCESS_DENIED_ERROR') {
      console.log('\nüí° SOLU√á√ÉO: Verifique:');
      console.log('   - Usu√°rio e senha do MySQL no .env');
      console.log('   - Se o MySQL est√° rodando (mysql -u root -p)');
    } else if (error.code === 'ER_BAD_DB_ERROR') {
      console.log('\nüí° SOLU√á√ÉO: O banco n√£o existe. Execute:');
      console.log('   CREATE DATABASE comunidade_conectada;');
    }
  } finally {
    process.exit();
  }
}

testConnection();